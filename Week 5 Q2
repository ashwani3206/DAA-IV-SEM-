#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

int cmpfunc(const void* a, const void* b) // comparison function for qsort
{
    return (*(int*)a - *(int*)b);
}

bool hasSum(int arr[], int n, int key)
{
    qsort(arr, n, sizeof(int), cmpfunc); // sort the array in ascending order

    int i = 0, j = n - 1; // initialize two pointers

    while(i < j)
    {
        int sum = arr[i] + arr[j];

        if(sum == key) // if the sum is equal to the key, we have found the elements
        {
            printf("%d %d\n", arr[i], arr[j]);
            return true;
        }
        else if(sum < key) // if the sum is less than the key, increment the left pointer
        {
            i++;
        }
        else // if the sum is greater than the key, decrement the right pointer
        {
            j--;
        }
    }

    printf("No Such Elements Exist\n");
    return false; // if no elements are found, return false
}

int main()
{
    int t; // number of test cases
    scanf("%d", &t);

    while(t--)
    {
        int n; // size of the array
        scanf("%d", &n);

        int arr[n]; // input array
        for(int i = 0; i < n; i++)
        {
            scanf("%d", &arr[i]);
        }

        int key; // key element
        scanf("%d", &key);

        hasSum(arr, n, key);
    }

    return 0;
}
